#!/bin/sh

input() {
	BIB_STR="$(vipe --suffix bib)"

	if [ -n "$BIB_FILE" ]; then
		BIB_STR="$(cat "$BIB_FILE")\n$BIB_STR"
	fi

	echo ""
	printf "%s" "$BIB_STR"
}

check_dependencies() {
	# test for install dependencies
	test -z "$(
		test "$(which bibtool)" && test "$(which bibclean)" && test "$(which curl)" && test "$(which vipe)" && echo true
	)" && echo "$(basename "$0") requires curl, bibtool and bibclean to be installed and in your path." >&2 && return 1

	return 0
}

get_url() {
	doi="$1"

	if [ "${doi#*"http"}" = "$doi" ]; then
		curl -Ls -o /dev/null -w "%{url_effective}" "https://doi.org/$doi"
	elif [ "${doi#*"doi"}" != "$doi" ]; then
		curl -Ls -o /dev/null -w "%{url_effective}" "$doi"
	else
		echo "$doi"
	fi
}

doi_to_bib() {
	url="$(get_url "$1")"

	json="$(curl -sd "$url" -H "Content-Type: text/plain" "http://localhost:1969/web")"
	pdf_url="$(echo "$json" | jq -r 'map(select(.mimeType == "application/pdf")) | .[0].url')"

	bib="$(curl -sd "$json" -H "Content-Type: application/json" "http://localhost:1969/export?format=bibtex")"

	echo "$bib"
	echo "$pdf_url"
}

[ -z "$1" ] && echo "No argument given to getbib." && exit
check_dependencies || exit 1

doi_to_bib "$1"
