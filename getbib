#!/bin/sh

input() {
	BIB_STR="$(vipe --suffix bib)"

	if [ -n "$BIB_FILE" ]; then
		BIB_STR="$(cat "$BIB_FILE")\n$BIB_STR"
	fi

	echo ""
	printf "%s" "$BIB_STR"
}

check_dependencies() {
	# test for install dependencies
	test -z "$(
		test "$(which bibtool)" && test "$(which bibclean)" && test "$(which curl)" && test "$(which vipe)" && echo true
	)" && echo "$(basename "$0") requires curl, bibtool and bibclean to be installed and in your path." >&2 && return 1

	return 0
}

get_bib() {
	id="$1"

    # if it is an URL
	if [ "${id#*"http"}" != "$id" ]; then
        # if it has "doi" in it
        if [ "${id#*"doi"}" != "$id" ]; then
            url="$(curl -Ls -o /dev/null -w "%{url_effective}" "$id")"
	        json="$(curl -sd "$url" -H "Content-Type: text/plain" "http://localhost:1969/web")"
        else
	        json="$(curl -sd "$id" -H "Content-Type: text/plain" "http://localhost:1969/web")"
        fi
	else # it is not an URL
        doi="$(echo "$id" | grep -Po "(10\.[0-9a-zA-Z]+\/(?:(?![\"&\'])\S)+)\b")"
        isbn="$(echo "$id" | grep -Po '^(?=(?:[^0-9]*[0-9]){10}(?:(?:[^0-9]*[0-9]){3})?$)[0-9-]+$' | sed "s/-//g")"

        if [ -n "$doi" ]; then
            url="$(curl -Ls -o /dev/null -w "%{url_effective}" "https://doi.org/$doi")"
	        json="$(curl -sd "$url" -H "Content-Type: text/plain" "http://localhost:1969/web")"
        elif [ -n "$isbn" ]; then
            json="$(curl -sd "$isbn" -H "Content-Type: text/plain" "http://localhost:1969/search")"
        fi
	fi

    [ -n "$json" ] && json_to_bib "$json"
}

json_to_bib() {
    json="$1"

	pdf_url="$(printf "%s" "$json" | jq -r 'map(select(.mimeType == "application/pdf")) | .[0].url')"
	bib="$(curl -sd "$json" -H "Content-Type: application/json" "http://localhost:1969/export?format=bibtex")"

	printf '%s' "$bib"

    if [ "$pdf_url" = "null" ]; then
        echo ""
    else
	    echo "$pdf_url"
    fi
}

[ -z "$1" ] && echo "No argument given to getbib." && exit
check_dependencies || exit 1

get_bib "$1"
